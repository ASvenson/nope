buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'gradle.plugin.org.spongepowered:spongegradle:0.8.1'
    }
}

plugins {
    id 'org.spongepowered.plugin' version '0.9.0'
    id 'java-gradle-plugin'
}

apply plugin: 'java'

// For sortClassFields
apply plugin: 'org.spongepowered.gradle'

group = 'minecraftonline'
version = '0.0.0'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    maven { url "http://maven.sk89q.com/repo/" }
}

dependencies {
    implementation 'org.spongepowered:spongeapi:7.2.0'
    implementation 'com.sk89q.worldedit:worldedit-core:6.1.4-SNAPSHOT'
    implementation 'com.sk89q.worldedit:worldedit-sponge:6.1.7-SNAPSHOT'
    annotationProcessor 'org.spongepowered:spongeapi:7.2.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
}

sourceSets {
    settingDescription {
        java {
            srcDir( file("src/settingdescription/java"))
            //resources.srcDir file("src/settingdescription/resources")
            compileClasspath += main.compileClasspath + main.output
            runtimeClasspath += main.runtimeClasspath + main.output
        }
    }
}

sponge.plugin.id = 'nope'

sortClassFields {
    add 'main', 'com.minecraftonline.nope.control.Settings'
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

task genSettingDescriptions(type: Test) {
    testClassesDirs = sourceSets.settingDescription.output.classesDirs

    classpath = sourceSets.settingDescription.runtimeClasspath

    useJUnit()
}

// Sort class fields on build.
build.dependsOn(sortClassFields)
build.dependsOn(test)
build.finalizedBy(genSettingDescriptions)

